<!DOCTYPE html>
<html>
    <head>
        <title>Mine</title>
        <link rel="icon" href="https://pbs.twimg.com/profile_images/1103056143322996736/yFwE2PJv_400x400.png">
    </head>
    <body>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pixi.js/5.1.0/pixi.min.js"></script>
        <script>
            // minesweeper
            let Application = PIXI.Application,
                loader = PIXI.loader,
                resources = PIXI.loader.resources,
                Sprite = PIXI.Sprite,
                Graphics = PIXI.Graphics;

            let app = new Application({
                width: 200,
                height: 200
            });

            app.renderer.backgroundColor = 0xFFFFFF;
            //app.renderer.view.style = "border:1px solid #000000;";

            let screenWidth = app.renderer.view.height;
            let screenHeight = app.renderer.view.width;
            document.body.appendChild(app.view);

            let block = new Graphics();
            let canvas = app.renderer.view;

            canvas.addEventListener('click', function (e) {
                revealSelectedTile(canvas, e);
            });

            // shows what was under the tile that was clicked
            function revealSelectedTile(canvas, event) {
                const rect = canvas.getBoundingClientRect();
                const x = event.clientX - rect.left;
                const y = event.clientY - rect.top;
                let dead = false;

                let remX = x % 20;
                let remY = y % 20;
                let tileX = (x - remX);
                let tileY = (y - remY);
                block.beginFill(0xFFFFFF);
                block.drawRect(tileX, tileY, 20, 20);
                block.endFill();
                app.stage.addChild(block);

                checkTiles();

                if (true) {
                    let bomb = new Graphics();
                    for (let i = 0; i < size; i++) {
                        for (let j = 0; j < size; j++) {
                            if (realBoard[i][j] == 1) {
                                bomb.beginFill(0x9400D3);
                                bomb.drawRect(j * 20, i * 20, 20, 20);
                                bomb.endFill();
                            }
                        }
                    }
                    app.stage.addChild(bomb);
                }
            }

            // what the fuck is real board, game board
            // U = unrevealed, R = revealed, B = bomb
            let size = 10;
            const realBoard = generateBoard(size);
            let  gameBoard = [];
            for (let i = 0; i < size; i++) {
                gameBoard[i] = [];
            }

            // creates the board
            function generateBoard(boardSize) {
                let board = [];
                for (let i = 0; i < boardSize; i++) {
                    board[i] = [];
                    for (let j = 0; j < boardSize; j++) {
                        let chance = Math.random();
                        if (chance > 0.75) {
                            board[i].push(1);
                        } else {
                            board[i].push(0);
                        }
                    }
                }
                return board;
            }
            console.log(realBoard);

            function displayBoard() {
                for (let i = 0; i < size; i++) {
                    for (let j = 0; j < size; j++) {

                    }
                }
            }

            setInterval(() => {
            }, 50);
        </script>
    </body>
</html>
