<!DOCTYPE html>
<html>
    <head>
        <title>Pixi</title>
        <link rel="icon" href="https://pbs.twimg.com/profile_images/1103056143322996736/yFwE2PJv_400x400.png">
    </head>
    <body>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pixi.js/5.1.0/pixi.min.js"></script>
        <script>
            // for less typing, easier to edit later on if they have updates.
            let Application = PIXI.Application,
                loader = PIXI.loader,
                resources = PIXI.loader.resources,
                Sprite = PIXI.Sprite,
                Graphics = PIXI.Graphics;

            // creates canvas using pixi
            let app = new Application({
                width: 400,
                height: 400
            });

            // attaches canvas to body
            document.body.appendChild(app.view);

            let screenHeight = app.renderer.view.height;
            let screenWidth = app.renderer.view.width;

            // get the sprites
            loader
                .add([
                    "../public/images/golem.png",
                    "../public/images/cookie.png"
                    ])
                    .load(setup);

            let player;
            let cookie;
            let velX = 0;
            let velY = 0;
            let speed = 4;

            // keeps player in game screen
            let containPlayer = () => {
                if (player.x + player.width > screenWidth) {
                    player.x = screenWidth - player.width;
                    velX = 0;
                }
                if (player.x < 0) {
                    player.x = 0;
                    velX = 0;
                }
                if (player.y > screenHeight - player.height) {
                    player.y = screenHeight - player.height;
                    velY = 0;
                }
                if (player.y < 0) {
                    player.y = 0;
                    velY = 0;
                }
            };

            // player movement
            let movePlayer = (e) => {
                let value = e.keyCode;

                if (value == 65 && velX <= 0) {
                    velX = 0;
                    velY = 0;
                    velX -= speed;
                } else if (value == 68 && velX >= 0) {
                    velX = 0;
                    velY = 0;
                    velX += speed;
                } else if (value == 87 && velY <= 0) {
                    velX = 0;
                    velY = 0;
                    velY -= speed;
                } else if (value == 83 && velY >= 0) {
                    velX = 0;
                    velY = 0;
                    velY += speed;
                }
            };

            function setup() {
                player = new Sprite(resources["../public/images/golem.png"].texture);
                cookie = new Sprite(resources["../public/images/cookie.png"].texture);

                cookie.x = screenWidth/4;
                cookie.y = screenHeight/4;
                cookie.height = 20;
                cookie.width = 20;

                app.stage.addChild(player);
                app.stage.addChild(cookie);

                state = play;

                app.ticker.add(delta => gameLoop(delta));
            }

            function gameLoop(delta) {
                state(delta);
            }

            function play(delta) {
                player.x += velX;
                player.y += velY;
                containPlayer();

                // if there is collision...
                if (collision(player, cookie)) {
                    app.stage.removeChild(cookie);
                    newCookie = new Sprite(resources["../public/images/cookie.png"].texture);
                    let randomX = Math.random() * screenWidth;
                    let randomY = Math.random() * screenHeight;
                    newCookie.x = randomX - cookie.width;
                    newCookie.y = randomY - cookie.height; // still a problem
                    newCookie.width = 20;
                    newCookie.height = 20;
                    console.log(cookie.x);
                    cookie = newCookie;
                    console.log(cookie.x + " " + cookie.y);
                    app.stage.addChild(newCookie);
                    console.log("COLLISION");
                }
            }

            function collision(obj1, obj2) {
                let hit = false;

                // center of each sprite
                obj1.centerX = obj1.x + obj1.width / 2;
                obj1.centerY = obj1.y + obj1.height / 2;
                obj2.centerX = obj2.y + obj2.width / 2;
                obj2.centerY = obj2.y + obj2.height / 2;

                // distance VECTOR between SPRITES
                vx = obj1.centerX - obj2.centerX;
                vy = obj1.centerY - obj2.centerY;

                // half widths and heights...
                obj1.halfWidth = obj1.width / 2;
                obj1.halfHeight = obj1.height / 2;
                obj2.halfWidth = obj2.width / 2;
                obj2.halfHeight = obj2.height / 2;

                // to detect the edges of the sprites
                combinedHalfWidths = obj1.halfWidth + obj2.halfWidth;
                combinedHalfHeights = obj1.halfHeight + obj2.halfHeight;

                // check for collision
                if (Math.abs(vx) < combinedHalfWidths) {
                    if (Math.abs(vy) < combinedHalfHeights) {
                        hit = true;
                        return hit;
                    }
                }
                return hit;
            }

            window.addEventListener("keydown", (e) => movePlayer(e));
        </script>
    </body>
</html>
